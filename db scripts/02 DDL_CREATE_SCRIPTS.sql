USE `portfolio_manager`;

-- Table COUNTRY
CREATE TABLE `COUNTRY` (
    `ID` BIGINT UNSIGNED NOT NULL PRIMARY KEY,
    `COUNTRY_CODE` VARCHAR(255) NOT NULL,
    `COUNTRY_NAME` VARCHAR(255) NOT NULL
);

-- Table USER_ROLE
CREATE TABLE `USER_ROLE` (
    `ID` BIGINT UNSIGNED NOT NULL PRIMARY KEY,
    `NAME` VARCHAR(255) NOT NULL,
	`DESCRIPTION` VARCHAR(255),
	`PRIORITY` INT,
	`ACTIVE` BOOLEAN
);

-- Table USER
CREATE TABLE `USER` (
    `ID` BIGINT UNSIGNED NOT NULL PRIMARY KEY,
	`FIRST_NAME` VARCHAR(255) NOT NULL,
    `LAST_NAME` VARCHAR(255),
	`USER_NAME` VARCHAR(255) NOT NULL,
	`PASSWORD` VARCHAR(255) NOT NULL
);

-- Table USER_ROLE_MAP--    `ID` BIGINT UNSIGNED NOT NULL PRIMARY KEY,
CREATE TABLE `USER_ROLE_MAP` (

	`USER_ID` BIGINT UNSIGNED NOT NULL,
	`USER_ROLE_ID` BIGINT UNSIGNED NOT NULL
);

-- Table USER_CONTACT
CREATE TABLE `USER_CONTACT` (
    `ID` BIGINT UNSIGNED NOT NULL PRIMARY KEY,
	`EMAIL` VARCHAR(255) NOT NULL,
    `PHONE_NUMBER` BIGINT,
	`USER_ID` BIGINT UNSIGNED 
);

-- Table OPERATING_ENTITY
CREATE TABLE `OPERATING_ENTITY` (
    `ID` BIGINT UNSIGNED NOT NULL PRIMARY KEY,
    `ENTITY_NAME` VARCHAR(255) NOT NULL,
    `COUNTRY_ID` BIGINT UNSIGNED
);

-- Table SERVICE_OFFERING
CREATE TABLE `SERVICE_OFFERING` (
    `ID` BIGINT UNSIGNED NOT NULL PRIMARY KEY,
    `SERVICE_NAME` VARCHAR(255) NOT NULL,
    `SERVICE_DESCRIPTION` VARCHAR(255),
    `BUSINESS_WEIGHTAGE` INT,
    `OPERATING_ENTITY_ID` BIGINT UNSIGNED
);

-- Table PORTFOLIO
CREATE TABLE `PORTFOLIO` (
    `ID` BIGINT UNSIGNED NOT NULL PRIMARY KEY,
    `PORTFOLIO_NAME` VARCHAR(255) NOT NULL,
    `PORTFOLIO_DESCRIPTION` VARCHAR(255),
    `SOLUTION` VARCHAR(255),
    `PORTFOLIO_MODEL` VARCHAR(255),
    `BUSINESS_WEIGHTAGE` INT,
    `SERVICE_OFFERING_ID` BIGINT UNSIGNED
);

-- Table PROJECT
CREATE TABLE `PROJECT` (
    `ID` BIGINT UNSIGNED NOT NULL PRIMARY KEY,
    `PRJ_NAME` VARCHAR(255) NOT NULL,
	`PRJ_DESCRIPTION` TEXT,
	`DEPARTMENT` VARCHAR(255),
    `BUSINESS_WEIGHTAGE` INT,
    `DEVELOPMENT_METHODOLOGY` VARCHAR(255),
	`SERVICE_OWNER_IT_ID` BIGINT UNSIGNED,
	`SERVICE_OWNER_BUSINESS_ID` BIGINT UNSIGNED,
	`SERVICE_MANAGER_ID` BIGINT UNSIGNED,
	`PORTFOLIO_ID` BIGINT UNSIGNED
);

-- Table KPI
CREATE TABLE `KPI` (
    `ID` BIGINT UNSIGNED NOT NULL PRIMARY KEY,
	`KPI_NAME` VARCHAR(255) NOT NULL,
    `KPI_DESCRIPTION` VARCHAR(255),
	`THRESHOLD_MAX` INT,
	`THRESHOLD_MIN` INT,
	`PROJECT_ID` BIGINT UNSIGNED,
    `BUSINESS_WEIGHTAGE` INT
);

-- Table KPI_DATA
CREATE TABLE `KPI_DATA` (
    `ID` BIGINT UNSIGNED NOT NULL PRIMARY KEY,
	`VALUE` INT,
	`REPORTING_PERIOD` DATETIME,
	`COMMENTS` VARCHAR(255),	
    `KPI_ID` BIGINT UNSIGNED
);

ALTER TABLE `COUNTRY` ADD CONSTRAINT 
UN_COUNTRY_CODE_NAME UNIQUE (COUNTRY_CODE, COUNTRY_NAME);

ALTER TABLE `OPERATING_ENTITY` ADD CONSTRAINT 
FK_OPERATING_ENTITY_COUNTRY_ID 
FOREIGN KEY (`COUNTRY_ID`) REFERENCES `COUNTRY` (`ID`);

ALTER TABLE `SERVICE_OFFERING` ADD CONSTRAINT 
FK_SERVICE_OFFERING_OPERATING_ENTITY_ID 
FOREIGN KEY (`OPERATING_ENTITY_ID`) REFERENCES 
`OPERATING_ENTITY` (`ID`);

ALTER TABLE `PORTFOLIO` ADD CONSTRAINT 
FK_PORTFOLIO_SERVICE_OFFERING_ID 
FOREIGN KEY (`SERVICE_OFFERING_ID`) 
REFERENCES `SERVICE_OFFERING` (`ID`);

ALTER TABLE `KPI` ADD CONSTRAINT FK_KPI_PROJECT_ID 
FOREIGN KEY (`PROJECT_ID`) REFERENCES `PROJECT` (`ID`) 
ON DELETE CASCADE;

ALTER TABLE `KPI_DATA` ADD CONSTRAINT FK_KPI_DATA_KPI_ID 
FOREIGN KEY (`KPI_ID`) REFERENCES `KPI` (`ID`) 
ON DELETE CASCADE;

ALTER TABLE `PROJECT` ADD CONSTRAINT 
FK_PROJECT_SERVICE_OWNER_IT_ID FOREIGN KEY (`SERVICE_OWNER_IT_ID`) 
REFERENCES `USER` (`ID`);

ALTER TABLE `PROJECT` ADD CONSTRAINT 
FK_PROJECT_SERVICE_OWNER_BUSINESS_ID 
FOREIGN KEY (`SERVICE_OWNER_BUSINESS_ID`) REFERENCES `USER` (`ID`);

ALTER TABLE `PROJECT` ADD CONSTRAINT 
FK_PROJECT_SERVICE_MANAGER_ID FOREIGN KEY (`SERVICE_MANAGER_ID`) 
REFERENCES `USER` (`ID`);

ALTER TABLE `PROJECT` ADD CONSTRAINT 
FK_PROJECT_PORTFOLIO_ID FOREIGN KEY (`PORTFOLIO_ID`) 
REFERENCES `PORTFOLIO` (`ID`);

ALTER TABLE `USER_CONTACT` ADD 
CONSTRAINT FK_USER_CONTACT_USR_ID 
FOREIGN KEY (`USER_ID`) REFERENCES `USER` (`ID`)
ON DELETE CASCADE ON UPDATE CASCADE;


ALTER TABLE `USER_ROLE_MAP` 
ADD CONSTRAINT FK_USER_ROLE_MAP_USR_ID 
FOREIGN KEY (`USER_ID`) REFERENCES `USER` (`ID`);

ALTER TABLE `USER_ROLE_MAP` ADD 
CONSTRAINT FK_USER_ROLE_MAP_USER_ROLE_ID 
FOREIGN KEY (`USER_ROLE_ID`) REFERENCES `USER_ROLE` (`ID`)
ON DELETE CASCADE;

ALTER TABLE `USER` ADD CONSTRAINT UN_USER_NAME 
UNIQUE (USER_NAME);

ALTER TABLE `USER_ROLE_MAP` 
ADD CONSTRAINT UN_USER_ROLE_MAP_USER_ROLE 
UNIQUE (USER_ID, USER_ROLE_ID);